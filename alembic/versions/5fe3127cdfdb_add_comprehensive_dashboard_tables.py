"""add_comprehensive_dashboard_tables

Revision ID: 5fe3127cdfdb
Revises: 002_performance_indexes
Create Date: 2025-09-12 11:12:55.850511

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5fe3127cdfdb'
down_revision = '002_performance_indexes'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('benefit_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_benefit_categories_id'), 'benefit_categories', ['id'], unique=False)
    op.create_index(op.f('ix_benefit_categories_name'), 'benefit_categories', ['name'], unique=True)
    op.create_table('business_units',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_business_units_id'), 'business_units', ['id'], unique=False)
    op.create_index(op.f('ix_business_units_name'), 'business_units', ['name'], unique=True)
    op.create_table('investment_classes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_investment_classes_id'), 'investment_classes', ['id'], unique=False)
    op.create_index(op.f('ix_investment_classes_name'), 'investment_classes', ['name'], unique=True)
    op.drop_index('idx_backlogs_backlog_id', table_name='backlogs')
    op.drop_index('idx_backlogs_created_at', table_name='backlogs')
    op.drop_index('idx_backlogs_name', table_name='backlogs')
    op.drop_index('idx_backlogs_performance', table_name='backlogs')
    op.drop_index('idx_backlogs_priority_id', table_name='backlogs')
    op.drop_index('idx_backlogs_status_id', table_name='backlogs')
    op.drop_index('idx_backlogs_status_priority', table_name='backlogs')
    op.drop_index('idx_features_created_at', table_name='features')
    op.drop_index('idx_features_performance', table_name='features')
    op.drop_index('idx_features_priority_id', table_name='features')
    op.drop_index('idx_features_project_id', table_name='features')
    op.drop_index('idx_features_project_priority', table_name='features')
    op.drop_index('idx_features_project_status', table_name='features')
    op.drop_index('idx_features_status_id', table_name='features')
    op.drop_index('idx_functions_created_at', table_name='functions')
    op.drop_index('idx_functions_is_active', table_name='functions')
    op.drop_index('idx_functions_name', table_name='functions')
    op.drop_index('idx_platforms_created_at', table_name='platforms')
    op.drop_index('idx_platforms_is_active', table_name='platforms')
    op.drop_index('idx_priorities_is_active', table_name='priorities')
    op.add_column('projects', sa.Column('planned_cost', sa.Numeric(precision=15, scale=2), nullable=True))
    op.add_column('projects', sa.Column('planned_benefits', sa.Numeric(precision=15, scale=2), nullable=True))
    op.add_column('projects', sa.Column('actual_cost', sa.Numeric(precision=15, scale=2), nullable=True))
    op.add_column('projects', sa.Column('actual_benefits', sa.Numeric(precision=15, scale=2), nullable=True))
    op.add_column('projects', sa.Column('estimate_at_completion', sa.Numeric(precision=15, scale=2), nullable=True))
    op.add_column('projects', sa.Column('business_unit_id', sa.Integer(), nullable=True))
    op.add_column('projects', sa.Column('investment_class_id', sa.Integer(), nullable=True))
    op.add_column('projects', sa.Column('benefit_category_id', sa.Integer(), nullable=True))
    op.drop_index('idx_projects_active_dates', table_name='projects')
    op.drop_index('idx_projects_created_at', table_name='projects')
    op.drop_index('idx_projects_criticality_id', table_name='projects')
    op.drop_index('idx_projects_due_date', table_name='projects')
    op.drop_index('idx_projects_is_active', table_name='projects')
    op.drop_index('idx_projects_performance', table_name='projects')
    op.drop_index('idx_projects_portfolio_status', table_name='projects')
    op.drop_index('idx_projects_priority_id', table_name='projects')
    op.drop_index('idx_projects_start_date', table_name='projects')
    op.drop_index('idx_projects_status_id', table_name='projects')
    op.drop_index('idx_projects_status_priority', table_name='projects')
    op.create_foreign_key(None, 'projects', 'business_units', ['business_unit_id'], ['id'])
    op.create_foreign_key(None, 'projects', 'investment_classes', ['investment_class_id'], ['id'])
    op.create_foreign_key(None, 'projects', 'benefit_categories', ['benefit_category_id'], ['id'])
    op.drop_index('idx_resources_availability_percentage', table_name='resources')
    op.drop_index('idx_resources_created_at', table_name='resources')
    op.drop_index('idx_resources_experience_level', table_name='resources')
    op.drop_index('idx_resources_is_active', table_name='resources')
    op.drop_index('idx_resources_role', table_name='resources')
    op.drop_index('idx_risks_is_active', table_name='risks')
    op.drop_index('idx_statuses_is_active', table_name='statuses')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('idx_statuses_is_active', 'statuses', ['is_active'], unique=False)
    op.create_index('idx_risks_is_active', 'risks', ['is_active'], unique=False)
    op.create_index('idx_resources_role', 'resources', ['role'], unique=False)
    op.create_index('idx_resources_is_active', 'resources', ['is_active'], unique=False)
    op.create_index('idx_resources_experience_level', 'resources', ['experience_level'], unique=False)
    op.create_index('idx_resources_created_at', 'resources', ['created_at'], unique=False)
    op.create_index('idx_resources_availability_percentage', 'resources', ['availability_percentage'], unique=False)
    op.drop_constraint(None, 'projects', type_='foreignkey')
    op.drop_constraint(None, 'projects', type_='foreignkey')
    op.drop_constraint(None, 'projects', type_='foreignkey')
    op.create_index('idx_projects_status_priority', 'projects', ['status_id', 'priority_id'], unique=False)
    op.create_index('idx_projects_status_id', 'projects', ['status_id'], unique=False)
    op.create_index('idx_projects_start_date', 'projects', ['start_date'], unique=False)
    op.create_index('idx_projects_priority_id', 'projects', ['priority_id'], unique=False)
    op.create_index('idx_projects_portfolio_status', 'projects', ['portfolio_id', 'status_id'], unique=False)
    op.create_index('idx_projects_performance', 'projects', ['created_at', 'updated_at'], unique=False)
    op.create_index('idx_projects_is_active', 'projects', ['is_active'], unique=False)
    op.create_index('idx_projects_due_date', 'projects', ['due_date'], unique=False)
    op.create_index('idx_projects_criticality_id', 'projects', ['criticality_id'], unique=False)
    op.create_index('idx_projects_created_at', 'projects', ['created_at'], unique=False)
    op.create_index('idx_projects_active_dates', 'projects', ['is_active', 'start_date', 'due_date'], unique=False)
    op.drop_column('projects', 'benefit_category_id')
    op.drop_column('projects', 'investment_class_id')
    op.drop_column('projects', 'business_unit_id')
    op.drop_column('projects', 'estimate_at_completion')
    op.drop_column('projects', 'actual_benefits')
    op.drop_column('projects', 'actual_cost')
    op.drop_column('projects', 'planned_benefits')
    op.drop_column('projects', 'planned_cost')
    op.create_index('idx_priorities_is_active', 'priorities', ['is_active'], unique=False)
    op.create_index('idx_platforms_is_active', 'platforms', ['is_active'], unique=False)
    op.create_index('idx_platforms_created_at', 'platforms', ['created_at'], unique=False)
    op.create_index('idx_functions_name', 'functions', ['name'], unique=False)
    op.create_index('idx_functions_is_active', 'functions', ['is_active'], unique=False)
    op.create_index('idx_functions_created_at', 'functions', ['created_at'], unique=False)
    op.create_index('idx_features_status_id', 'features', ['status_id'], unique=False)
    op.create_index('idx_features_project_status', 'features', ['project_id', 'status_id'], unique=False)
    op.create_index('idx_features_project_priority', 'features', ['project_id', 'priority_id'], unique=False)
    op.create_index('idx_features_project_id', 'features', ['project_id'], unique=False)
    op.create_index('idx_features_priority_id', 'features', ['priority_id'], unique=False)
    op.create_index('idx_features_performance', 'features', ['created_at', 'updated_at'], unique=False)
    op.create_index('idx_features_created_at', 'features', ['created_at'], unique=False)
    op.create_index('idx_backlogs_status_priority', 'backlogs', ['status_id', 'priority_id'], unique=False)
    op.create_index('idx_backlogs_status_id', 'backlogs', ['status_id'], unique=False)
    op.create_index('idx_backlogs_priority_id', 'backlogs', ['priority_id'], unique=False)
    op.create_index('idx_backlogs_performance', 'backlogs', ['created_at', 'updated_at'], unique=False)
    op.create_index('idx_backlogs_name', 'backlogs', ['name'], unique=False)
    op.create_index('idx_backlogs_created_at', 'backlogs', ['created_at'], unique=False)
    op.create_index('idx_backlogs_backlog_id', 'backlogs', ['backlog_id'], unique=False)
    op.drop_index(op.f('ix_investment_classes_name'), table_name='investment_classes')
    op.drop_index(op.f('ix_investment_classes_id'), table_name='investment_classes')
    op.drop_table('investment_classes')
    op.drop_index(op.f('ix_business_units_name'), table_name='business_units')
    op.drop_index(op.f('ix_business_units_id'), table_name='business_units')
    op.drop_table('business_units')
    op.drop_index(op.f('ix_benefit_categories_name'), table_name='benefit_categories')
    op.drop_index(op.f('ix_benefit_categories_id'), table_name='benefit_categories')
    op.drop_table('benefit_categories')
    # ### end Alembic commands ###
